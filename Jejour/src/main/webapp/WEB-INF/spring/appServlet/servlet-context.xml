<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- jsonView 객체와 json 전용 viewResolver 등록하기 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"/>
	</beans:bean>
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>
	
	<!-- @ResponseBody 사용을 위한 객체 등록 -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- DispatcherServlet에서 컨트롤러로 가기 전에 동작할 객체인
		  인터셉터 구현하기 -->
	<interceptors>
		<interceptor>
			<!-- 인터셉터가 동작할 주소 -->
			<!-- 특정 URL 경로를 로그인 여부로 차단하기 -->
			<mapping path="/member/memberView.do"/>
			<mapping path="/member/memberUpdate.do"/>
			<mapping path="/member/memberDelete.do"/>
			<!-- /member 로 시작하는 모든 URL경로 차단 -->
			<!-- <mapping path="/member/**/*.do"/>  --> 
			<!-- 
			<exclude-mapping path="/member/memberEnroll.do"/>
			<exclude-mapping path="/member/memberEnrollEnd.do"/>
			<exclude-mapping path="/member/memberLogin.do"/>
			 -->
			
			<!-- 게시글 전용 URL 등록하기  -->
			<mapping path="/flash/**/*.fl"/>
			<mapping path="/hotspot/**/*.ho"/>
			<exclude-mapping path="/flash/flashList.fl"/>
			<exclude-mapping path="/hotspot/hotspotList.ho"/>
			<!-- 인터셉터 등록 -->
			<beans:bean id="loginCheckInterceptor" class="com.kh.jejour.common.interceptor.LoginCheckInterceptor" />
		</interceptor>
	</interceptors>
	
	<context:component-scan base-package="com.kh.jejour" />
	
	<!-- aop 어노테이션 등록 -->
	<aop:aspectj-autoproxy />
	
	
</beans:beans>
